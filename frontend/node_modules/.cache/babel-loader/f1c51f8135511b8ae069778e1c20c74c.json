{"ast":null,"code":"export default class APIService {\n  static async updateArticle(article_id, body, token) {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // Bearer token kullanımı\n\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Makale güncellenemedi:\", error);\n      throw error; // Hatayı tekrar fırlatarak bileşende yakalayabilirsiniz\n    }\n  }\n\n  static async insertArticle(body, token) {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/articles/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // Bearer token kullanımı\n\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Makale eklenemedi:\", error);\n      throw error;\n    }\n  }\n\n  static async deleteArticle(article_id, token) {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n        method: 'DELETE',\n        // DELETE metodu kullanımı\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // Bearer token kullanımı\n\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Makale silinemedi:\", error);\n      throw error;\n    }\n  }\n\n  static async loginUser(body) {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/token/`, {\n        // Simple JWT token endpoint'i\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Giriş yapılamadı:\", error);\n      throw error;\n    }\n  }\n\n  static async registerUser(body) {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/users/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Kayıt yapılamadı:\", error);\n      throw error;\n    }\n  }\n\n}","map":{"version":3,"names":["APIService","updateArticle","article_id","body","token","response","fetch","method","headers","JSON","stringify","ok","Error","status","json","error","console","insertArticle","deleteArticle","loginUser","registerUser"],"sources":["/Users/onurkapucu/Downloads/Django-And-React-JS-Blog-main/frontend/src/components/APIService.js"],"sourcesContent":["export default class APIService {\n    static async updateArticle(article_id, body, token) {\n        try {\n            const response = await fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}` // Bearer token kullanımı\n                },\n                body: JSON.stringify(body)\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(\"Makale güncellenemedi:\", error);\n            throw error; // Hatayı tekrar fırlatarak bileşende yakalayabilirsiniz\n        }\n    }\n\n    static async insertArticle(body, token) {\n        try {\n            const response = await fetch(`http://127.0.0.1:8000/api/articles/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}` // Bearer token kullanımı\n                },\n                body: JSON.stringify(body)\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(\"Makale eklenemedi:\", error);\n            throw error;\n        }\n    }\n\n    static async deleteArticle(article_id, token) {\n        try {\n            const response = await fetch(`http://127.0.0.1:8000/api/articles/${article_id}/`, {\n                method: 'DELETE', // DELETE metodu kullanımı\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}` // Bearer token kullanımı\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(\"Makale silinemedi:\", error);\n            throw error;\n        }\n    }\n\n    static async loginUser(body) {\n        try {\n            const response = await fetch(`http://127.0.0.1:8000/api/token/`, { // Simple JWT token endpoint'i\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(\"Giriş yapılamadı:\", error);\n            throw error;\n        }\n    }\n\n    static async registerUser(body) {\n        try {\n            const response = await fetch(`http://127.0.0.1:8000/api/users/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(body)\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(\"Kayıt yapılamadı:\", error);\n            throw error;\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
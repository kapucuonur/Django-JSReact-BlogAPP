{"ast":null,"code":"export const GetArticles = token => {\n  return fetch('/api/articles/', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Token ${token}`\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not OK');\n    }\n\n    return response.json();\n  }).catch(error => {\n    console.error('Error fetching articles:', error);\n    throw error;\n  });\n};\n_c = GetArticles;\nexport const InsertArticle = (data, token) => {\n  return fetch('/api/articles/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Token ${token}`\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    if (!response.ok) {\n      return response.text().then(text => {\n        throw new Error(text || 'Network response was not OK');\n      });\n    }\n\n    return response.json();\n  }).catch(error => {\n    console.error('Error inserting article:', error);\n    throw error;\n  });\n};\n_c2 = InsertArticle;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetArticles\");\n$RefreshReg$(_c2, \"InsertArticle\");","map":{"version":3,"names":["GetArticles","token","fetch","method","headers","then","response","ok","Error","json","catch","error","console","InsertArticle","data","body","JSON","stringify","text"],"sources":["/Users/onurkapucu/Downloads/Django-And-React-JS-Blog-main/frontend/src/components/APIService.js"],"sourcesContent":["export const GetArticles = (token) => {\n    return fetch('/api/articles/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n        },\n    })\n    .then(response => {\n        if (!response.ok) {\n            throw new Error('Network response was not OK');\n        }\n        return response.json();\n    })\n    .catch(error => {\n        console.error('Error fetching articles:', error);\n        throw error;\n    });\n};\n\nexport const InsertArticle = (data, token) => {\n    return fetch('/api/articles/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`,\n        },\n        body: JSON.stringify(data),\n    })\n    .then(response => {\n        if (!response.ok) {\n            return response.text().then(text => {\n                throw new Error(text || 'Network response was not OK');\n            });\n        }\n        return response.json();\n    })\n    .catch(error => {\n        console.error('Error inserting article:', error);\n        throw error;\n    });\n};"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,KAAD,IAAW;EAClC,OAAOC,KAAK,CAAC,gBAAD,EAAmB;IAC3BC,MAAM,EAAE,KADmB;IAE3BC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,iBAAkB,SAAQH,KAAM;IAF3B;EAFkB,CAAnB,CAAL,CAONI,IAPM,CAODC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;MACd,MAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;IACH;;IACD,OAAOF,QAAQ,CAACG,IAAT,EAAP;EACH,CAZM,EAaNC,KAbM,CAaAC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;IACA,MAAMA,KAAN;EACH,CAhBM,CAAP;AAiBH,CAlBM;KAAMX,W;AAoBb,OAAO,MAAMa,aAAa,GAAG,CAACC,IAAD,EAAOb,KAAP,KAAiB;EAC1C,OAAOC,KAAK,CAAC,gBAAD,EAAmB;IAC3BC,MAAM,EAAE,MADmB;IAE3BC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,iBAAkB,SAAQH,KAAM;IAF3B,CAFkB;IAM3Bc,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;EANqB,CAAnB,CAAL,CAQNT,IARM,CAQDC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;MACd,OAAOD,QAAQ,CAACY,IAAT,GAAgBb,IAAhB,CAAqBa,IAAI,IAAI;QAChC,MAAM,IAAIV,KAAJ,CAAUU,IAAI,IAAI,6BAAlB,CAAN;MACH,CAFM,CAAP;IAGH;;IACD,OAAOZ,QAAQ,CAACG,IAAT,EAAP;EACH,CAfM,EAgBNC,KAhBM,CAgBAC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;IACA,MAAMA,KAAN;EACH,CAnBM,CAAP;AAoBH,CArBM;MAAME,a"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export default class APIService {\n  static async updateArticle(article_id, body, token) {\n    try {\n      const response = await fetch(`${this.BASE_URL}/api/articles/${article_id}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          console.error(\"Token expired. Redirecting to login...\");\n          window.location.href = '/login';\n        }\n\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Makale güncellenemedi:\", error);\n      throw error;\n    }\n  }\n\n  static async insertArticle(body, token) {\n    try {\n      const response = await fetch(`${this.BASE_URL}/api/articles/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Makale eklenemedi:\", error);\n      throw error;\n    }\n  }\n\n  static async deleteArticle(article_id, token) {\n    try {\n      const response = await fetch(`${this.BASE_URL}/api/articles/${article_id}/`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Makale silinemedi:\", error);\n      throw error;\n    }\n  }\n\n  static async loginUser(body) {\n    try {\n      const response = await fetch(`${this.BASE_URL}/api/token/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Giriş yapılamadı:\", error);\n      throw error;\n    }\n  }\n\n  static async registerUser(body) {\n    if (!body || !body.username || !body.password) {\n      throw new Error(\"Username and password are required.\");\n    }\n\n    try {\n      const response = await fetch(`${this.BASE_URL}/api/users/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Server error response:', errorData);\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Kayıt yapılamadı:\", error);\n      throw error;\n    }\n  }\n\n}\nAPIService.BASE_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000';","map":{"version":3,"names":["APIService","updateArticle","article_id","body","token","response","fetch","BASE_URL","method","headers","JSON","stringify","ok","status","console","error","window","location","href","Error","json","insertArticle","deleteArticle","loginUser","registerUser","username","password","errorData","process","env","REACT_APP_API_URL"],"sources":["/Users/onurkapucu/Downloads/Django-And-React-JS-Blog-main/frontend/src/components/APIService.js"],"sourcesContent":["export default class APIService {\n    static BASE_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000';\n  \n    static async updateArticle(article_id, body, token) {\n      try {\n        const response = await fetch(`${this.BASE_URL}/api/articles/${article_id}/`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n          },\n          body: JSON.stringify(body),\n        });\n  \n        if (!response.ok) {\n          if (response.status === 401) {\n            console.error(\"Token expired. Redirecting to login...\");\n            window.location.href = '/login';\n          }\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n  \n        return await response.json();\n      } catch (error) {\n        console.error(\"Makale güncellenemedi:\", error);\n        throw error;\n      }\n    }\n  \n    static async insertArticle(body, token) {\n      try {\n        const response = await fetch(`${this.BASE_URL}/api/articles/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n          },\n          body: JSON.stringify(body),\n        });\n  \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n  \n        return await response.json();\n      } catch (error) {\n        console.error(\"Makale eklenemedi:\", error);\n        throw error;\n      }\n    }\n  \n    static async deleteArticle(article_id, token) {\n      try {\n        const response = await fetch(`${this.BASE_URL}/api/articles/${article_id}/`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n          },\n        });\n  \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n  \n        return await response.json();\n      } catch (error) {\n        console.error(\"Makale silinemedi:\", error);\n        throw error;\n      }\n    }\n  \n    static async loginUser(body) {\n      try {\n        const response = await fetch(`${this.BASE_URL}/api/token/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(body),\n        });\n  \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n  \n        return await response.json();\n      } catch (error) {\n        console.error(\"Giriş yapılamadı:\", error);\n        throw error;\n      }\n    }\n  \n    static async registerUser(body) {\n      if (!body || !body.username || !body.password) {\n        throw new Error(\"Username and password are required.\");\n      }\n  \n      try {\n        const response = await fetch(`${this.BASE_URL}/api/users/`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(body),\n        });\n  \n        if (!response.ok) {\n          const errorData = await response.json();\n          console.error('Server error response:', errorData);\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n  \n        return await response.json();\n      } catch (error) {\n        console.error(\"Kayıt yapılamadı:\", error);\n        throw error;\n      }\n    }\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}